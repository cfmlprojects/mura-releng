<project name="distro.build" default="build" basedir="./" xmlns:antcontrib="antlib:net.sf.antcontrib">

  <loadproperties srcfile="build.properties" />
  <import file="${cfdistro.build.file}" />

  <target name="mura.getversion">
    <loadfile srcFile="${src.dir}/requirements/mura/configBean.cfc" property="mura.version" />
    <antcontrib:propertyregex override="yes" property="mura.version" input="${mura.version}"
      regexp=".*?variables.instance.version=&quot;([^&quot;]+).*?" select="\1" />
    <echo message="Mura Version: ${mura.version}" />
  </target>

  <target name="build" depends="cfdistro.build,mura.getversion,mura.initdb">
<!--
    <copy file="${basedir}/settings.ini.cfm" tofile="${src.dir}/config/settings.ini.cfm" overwrite="true" />
    <antcontrib:inifile source="${src.dir}/config/settings.ini.cfm" dest="${src.dir}/config/settings.ini.cfm">
      <set section="production" property="dbtype" value="mysql" />
      <set section="production" property="auto_create" value="No" />
      <set section="production" property="datasource" value="mura" />
      <set section="production" property="cfpassword" value="" />
      <set section="production" property="databaseserver" value="localhost" />
      <set section="production" property="dbusername" value="${dsn.mura.username}" />
      <set section="production" property="dbpassword" value="${dsn.mura.password}" />
      <set section="production" property="dbtablespace" value="USERS" />
      <set section="production" property="assetpath" value="" />
      <set section="production" property="context" value="" />
      <set section="production" property="port" value="${server.port}" />
      <set section="production" property="adminemail" value="admin@localhost.com" />
      <set section="production" property="siteidinurls" value="0" />
      <set section="production" property="indexfileinurls" value="1" />
      <set section="production" property="autodiscoverplugins" value="true" />
      <set section="production" property="trackSessionInNewThread" value="0" />
    </antcontrib:inifile>
-->
  </target>

  <target name="build.test" depends="build,mura.initdb">
  </target>

  <target name="build.mvn.deploy" depends="project.update,build">
    <property name="mvn.repo.dest" value="local" />
    <property name="mvn.repo.dest" value="remote" />
    <property name="mvn.repo.id" value="mvn.repo.${mvn.repo.dest}" />
    <property name="maven.repo.local" location="${cfdistro.basedir}/artifacts" />
    <mvn-repo id="mvn.repo.local" url="file://${maven.repo.local}/" />
    <property name="mvn.type" value="release" />
    <delete file="${dist.dir}/mura.zip" />
    <zip destfile="${dist.dir}/mura.zip" update="false">
      <fileset dir="${src.dir}/" excludes="config/settings.ini.cfm" />
    </zip>
    <pom-and-deploy pomid="mura.pom" packaging="zip" artifact="${dist.dir}/mura.zip" groupId="org.getmura"
      artifactId="mura" version="${mura.version}" name="mura" />
  </target>

  <target name="mura.initdb" depends="exists.datasources.xml">
    <sql driver="${dsn.mura.class}" classpathref="data.lib.path" url="${dsn.mura.url}" userid="${dsn.mura.username}"
      password="${dsn.mura.password}">
      DROP DATABASE IF EXISTS `${dsn.mura.database}`;
      CREATE DATABASE `${dsn.mura.database}`;
    </sql>
    <echo message="recreating db: ${dsn.mura.database}" />
    <delete file="${src.dir}/config/settings.ini.cfm" />
    <server-run>
      <antcontrib:post to="http://${server.host}:${runwar.port}/index.cfm" verbose="true"
        failonerror="true">
        <prop name="action" value="doSetup" />
        <prop name="production_dbtype" value="mysql" />
        <prop name="auto_create" value="No" />
        <prop name="production_datasource" value="mura" />
        <prop name="production_cfpassword" value="" />
        <prop name="production_databaseserver" value="localhost" />
        <prop name="production_dbusername" value="${dsn.mura.username}" />
        <prop name="production_dbpassword" value="${dsn.mura.password}" />
        <prop name="production_dbtablespace" value="USERS" />
        <prop name="production_assetpath" value="" />
        <prop name="production_context" value="" />
        <prop name="production_port" value="${server.port}" />
        <prop name="admin_username" value="${mura.admin.username}" />
        <prop name="admin_password" value="${mura.admin.password}" />
        <prop name="production_adminemail" value="admin@localhost.com" />
        <prop name="production_siteidinurls" value="0" />
        <prop name="production_indexfileinurls" value="1" />
        <prop name="setupSubmitButton" value="Save Settings" />
      </antcontrib:post>
      <sql driver="${dsn.mura.class}" classpathref="data.lib.path" url="${dsn.mura.url}" userid="${dsn.mura.username}"
        password="${dsn.mura.password}">
        UPDATE tusers SET username = '${mura.admin.username}', password = md5('${mura.admin.password}') WHERE username
        =
        'admin';
      </sql>
      <echo message="mura database successfully generated" />
    </server-run>
  </target>

</project>
